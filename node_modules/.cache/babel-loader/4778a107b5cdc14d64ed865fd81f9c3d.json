{"ast":null,"code":"import axios from \"axios\";\nexport const fetchImages = term => {\n  return async dispatch => {\n    dispatch({\n      type: \"BEGIN_SEARCH\",\n      term\n    });\n\n    try {\n      const response = await axios.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          client_id: \"8c16a0088b61b5a0d56c38c66d855114b1574755f7d3c4f9e9319552dfb79292\",\n          query: term\n        }\n      });\n      dispatch({\n        type: \"DONE_SEARCH\",\n        images: response.data.results\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR_SEARCH\"\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/kiet/project/mobx-demo/src/actions/galleryAction.js"],"names":["axios","fetchImages","term","dispatch","type","response","get","params","client_id","query","images","data","results","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,cADD;AAELF,MAAAA;AAFK,KAAD,CAAR;;AAKA,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CACnB,wCADmB,EAEnB;AACIC,QAAAA,MAAM,EAAE;AACJC,UAAAA,SAAS,EAAE,kEADP;AAEJC,UAAAA,KAAK,EAAEP;AAFH;AADZ,OAFmB,CAAvB;AASAC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,aADD;AAELM,QAAAA,MAAM,EAAEL,QAAQ,CAACM,IAAT,CAAcC;AAFjB,OAAD,CAAR;AAIH,KAdD,CAcE,OAAOC,KAAP,EAAc;AACZV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH;AACJ,GAzBD;AA0BH,CA3BM","sourcesContent":["import axios from \"axios\";\n\nexport const fetchImages = term => {\n    return async dispatch => {\n        dispatch({\n            type: \"BEGIN_SEARCH\",\n            term\n        });\n\n        try {\n            const response = await axios.get(\n                \"https://api.unsplash.com/search/photos\",\n                {\n                    params: {\n                        client_id: \"8c16a0088b61b5a0d56c38c66d855114b1574755f7d3c4f9e9319552dfb79292\",\n                        query: term\n                    }\n                }\n            );\n            dispatch({\n                type: \"DONE_SEARCH\",\n                images: response.data.results\n            });\n        } catch (error) {\n            dispatch({\n                type: \"ERROR_SEARCH\"\n            });\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}